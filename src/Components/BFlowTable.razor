@typeparam TItem
@typeparam TRequest
@using BlazorFlow.Icons

<div @ref="_tableContainer"
     class="w-full h-full relative flex flex-col overflow-x-auto text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
     role="region"
     aria-label="Data table container">

    <table class="@TableClass" aria-rowcount="@_items?.Count()">
        <thead class="@TableHeaderClass">
            <tr>
                @HeaderTemplate
            </tr>
        </thead>
        <tbody aria-busy="@_firstLoad" aria-live="polite">
            @if (!_firstLoad && !_isEmpty)
            {
                @foreach (var item in _items)
                {
                    <tr class="@TableRowClass"
                        role="row"
                        tabindex="0"
                        @onclick="@(() => OnRowClick.InvokeAsync(item))">
                        @RowTemplate(item)
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (IsShowMoreEnabled)
    {
        @if (_hasMoreData)
        {
            <div class="flex justify-center mt-2">
                <Button Type="ButtonType.Button"
                        Variant="Variant.Text"
                        OnClick="ShowMoreAsync"
                        aria-label="Show more data"
                        Class="@("text-blue-600 hover:text-blue-600 " + (!_isLoading ? "underline" : string.Empty))"
                        IsLoading="_isLoading">
                    Show more
                </Button>
            </div>
        }
    }
    else
    {
        <div class="flex justify-center lg:justify-end items-center gap-2 mt-2" role="navigation" aria-label="Pagination">

            <Button Type="ButtonType.Button"
                    Variant="Variant.Text"
                    Icon="@Icons.Outlined.ChevronLeftDouble"
                    VisualPlacement="VisualPlacement.Start"
                    Size="ButtonSize.Small"
                    aria-label="Go to first page"
                    aria-disabled="@(_currentPage <= 1)"
                    Disabled="@(_currentPage <= 1)"
                    OnClick="@(() => GoToPage(1))">
            </Button>

            <Button Type="ButtonType.Button"
                    Variant="Variant.Text"
                    Icon="@Icons.Outlined.ChevronLeft"
                    VisualPlacement="VisualPlacement.Start"
                    Size="ButtonSize.Small"
                    aria-label="Go to previous page"
                    aria-disabled="@(_currentPage <= 1)"
                    Disabled="@(_currentPage <= 1)"
                    OnClick="@(() => GoToPage(_currentPage - 1))">
            </Button>

            <span aria-live="polite">@_currentPage of @(Math.Ceiling((double)_totalPages / _pageSize))</span>

            <Button Type="ButtonType.Button"
                    Variant="Variant.Text"
                    Icon="@Icons.Outlined.ChevronRight"
                    VisualPlacement="VisualPlacement.Start"
                    Size="ButtonSize.Small"
                    aria-label="Go to next page"
                    aria-disabled="@(_currentPage >= Math.Ceiling((double)_totalPages / _pageSize))"
                    Disabled="@(_currentPage >= Math.Ceiling((double)_totalPages / _pageSize))"
                    OnClick="@(() => GoToPage(_currentPage + 1))">
            </Button>

            <Button Type="ButtonType.Button"
                    Variant="Variant.Text"
                    Icon="@Icons.Outlined.ChevronRightDouble"
                    VisualPlacement="VisualPlacement.Start"
                    Size="ButtonSize.Small"
                    aria-label="Go to last page"
                    aria-disabled="@(_currentPage >= Math.Ceiling((double)_totalPages / _pageSize))"
                    Disabled="@(_currentPage >= Math.Ceiling((double)_totalPages / _pageSize))"
                    OnClick="@(() => GoToPage(((int)Math.Ceiling((double)_totalPages / _pageSize))))">
            </Button>
        </div>
    }

    <div class="flex-1 text-gray-500" role="status" aria-live="polite">
        @if (_firstLoad)
        {
            <div class="w-full text-center my-5" aria-busy="true">
                Loading...
            </div>
        }
        else if (_isEmpty)
        {
            @if (EmptyState != null)
            {
                @EmptyState
            }
            else
            {
                <div class="w-full text-center my-5">
                    No data found.
                </div>
            }
        }
    </div>
</div>
