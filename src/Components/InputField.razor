<style>
    /* Autofill fix: adjust label position when input is autofilled */
    /* Small outlined/text input autofill adjustment */
    input.sm-input:-webkit-autofill + label {
        transform: translateY(-22px);

    }
    /* Small filled input autofill adjustment */
    input.sm-input-filled:-webkit-autofill + label {
        transform: translateY(-1rem);
    }
    /* Medium and large inputs (outlined, text, filled) autofill adjustment */
    input.md-input:-webkit-autofill + label,
    input.lg-input:-webkit-autofill + label,
    input.md-input-filled:-webkit-autofill + label,
    input.lg-input-filled:-webkit-autofill + label {
        transform: translateY(-1.25rem);
    }
</style>

<div class="@InputWrapperClass">
    @if (VisualPlacement == Enums.VisualPlacement.Start)
    {
        <span class="absolute left-4 top-1/2 -translate-y-1/2 text-gray-400 @IconClass">
            <Icon SvgIcon="@Icon" Size="@IconSize"></Icon>
        </span>
    }

    <input type="@Type.ToString()" 
           id="@Id" 
           placeholder="@PlaceholderValue" 
           class="@InputClass" 
           disabled="@Disabled"
           readonly="@ReadOnly" 
           value="@Value"
           @oninput="HandleInput"
           aria-invalid="@ValidationMessages.Any()"
           autocomplete="@AutoComplete"
           aria-describedby="@AriaDescribedById"/>
    
    
    @if (VisualPlacement == Enums.VisualPlacement.End)
    {
        <span class="absolute right-4 top-1/2 -translate-y-1/2 text-gray-400 @IconClass">
            <Icon SvgIcon="@Icon" Size="@IconSize"></Icon>
        </span>
    }

    <label for="@Id" class="@LabelClass">@Label</label>
    
    @if (HasError)
    {
        <p id="@($"{Id}-error")" class="mt-2 text-xs text-red-600 dark:text-red-400">
            @(ErrorText ?? ValidationMessages.FirstOrDefault())
        </p>
    }
    else if (!string.IsNullOrWhiteSpace(HelperText))
    {
        <p id="@($"{Id}-helper-text")" class="mt-2 text-xs text-gray-500 dark:text-gray-400">
            @HelperText
        </p>
    }
</div>

