@typeparam TItem
@typeparam TValue

<div class="relative w-full focus:outline-none" tabindex="0">
    <div class="relative">
        @if (VisualPlacement == VisualPlacement.Start)
        {
            <span class="@GetIconClass">
                <Icon SvgIcon="@Icon" Size="@IconSize"></Icon>
            </span>
        }

        <input id="@Id"
               type="text"
               readonly
               value="@DisplayText"
               @onclick="ToggleDropdown"
               placeholder=" "
               class="@InputClass"
               disabled="@Disabled" />

        <!-- Floating Label -->
        <label for="@Id" class="@LabelClass">
            @Label
        </label>

        @if (VisualPlacement == VisualPlacement.End || HasError)
        {
            <span class="@GetIconClass">
                <Icon SvgIcon="@(HasError ? 
                            Icons.Icons.Outlined.Error : (string.IsNullOrWhiteSpace(Icon) ? 
                            Icons.Icons.Outlined.ChevronDown : Icon))"
                      Size="@IconSize">
                </Icon>
            </span>
        }
    </div>

    <!-- Dropdown -->
    @if (IsOpen)
    {
        <div class="absolute z-50 mt-1 w-full bg-white rounded-lg shadow-lg border border-gray-200 max-h-60 overflow-auto">
            @foreach (var option in CachedOptions)
            {
                var isSelected = EqualityComparer<TValue>.Default.Equals(option.Value, Value);
                <div @onclick="() => SelectItem(option.Value)"
                     @key="option.Value"
                     class="@GetOptionClass(isSelected)">
                    @option.Display
                </div>
            }
        </div>
    }

    @if (HasError)
    {
        <p id="@($"{Id}-error")" class="my-2 text-xs text-red-600 dark:text-red-400">
            @(ErrorText ?? ValidationMessages.FirstOrDefault())
        </p>
    }
    else if (!string.IsNullOrWhiteSpace(HelperText))
    {
        <p id="@($"{Id}-helper-text")" class="my-2 text-xs text-gray-500 dark:text-gray-400">
            @HelperText
        </p>
    }
</div>

